import org.apache.tools.ant.taskdefs.condition.Os

ext {
  ext {
    seleniumVersion = '2.44.0'
    chromeDriverVersion = '2.10'
    phantomJsVersion = '1.9.8'
  }
}

apply plugin: 'java'
apply plugin: 'idea'
apply from: "gradle/osSpecificDownloads.gradle"

version = '1.0'

repositories {
  mavenCentral()
}

dependencies {
  compile('com.saucelabs:sebuilder-interpreter:1.0.6')
  compile "org.seleniumhq.selenium:selenium-firefox-driver:$seleniumVersion"
  compile "org.seleniumhq.selenium:selenium-chrome-driver:$seleniumVersion"
  // This is version 1.2.0 with a patch to use selenium 2.44.0.
  // See https://github.com/detro/ghostdriver/issues/397
  compile("com.codeborne:phantomjsdriver:1.2.1") {
    transitive = false
  }
}

task runWithAllDrivers {
  // The drivers we want to use
  def drivers = ["Firefox", "Chrome", "PhantomJs"]
  dependsOn drivers.collect { driver -> "runSeInterpreterWith${driver}" }
}

task(runSeInterpreterWithPhantomJs, dependsOn: ['unzipPhantomJs', 'classes'], type: JavaExec) {
  def phantomJsFilename = Os.isFamily(Os.FAMILY_WINDOWS) ? "phantomjs.exe" : "bin/phantomjs"
  systemProperty "phantomjs.binary.path",
      new File(unzipPhantomJs.outputs.files.singleFile, phantomJsFilename).absolutePath

  systemProperty "org.apache.commons.logging.Log", "org.apache.commons.logging.impl.SimpleLog"
  systemProperty "org.apache.commons.logging.simplelog.log.com.sebuilder.interpreter.SeInterpreter", 'DEBUG'

  main = 'com.sebuilder.interpreter.SeInterpreter'
  classpath = sourceSets.main.runtimeClasspath
  args "src/main/resources/full_example.json"
  args "--driver=PhantomJs"
}

task(runSeInterpreterWithChrome, dependsOn: ['unzipChromeDriver', 'classes'], type: JavaExec) {
  def chromedriverFilename = Os.isFamily(Os.FAMILY_WINDOWS) ? "chromedriver.exe" : "chromedriver"
  systemProperty "webdriver.chrome.driver",
      new File(unzipChromeDriver.outputs.files.singleFile, chromedriverFilename).absolutePath

  systemProperty "org.apache.commons.logging.Log", "org.apache.commons.logging.impl.SimpleLog" // NoOpLog"
  systemProperty "org.apache.commons.logging.simplelog.log.com.sebuilder.interpreter.SeInterpreter", 'DEBUG'

  main = 'com.sebuilder.interpreter.SeInterpreter'
  classpath = sourceSets.main.runtimeClasspath
  args "src/main/resources/full_example.json"
  args "--driver=Chrome"
}

task(runSeInterpreterWithFirefox, dependsOn: ['classes'], type: JavaExec) {
  main = 'com.sebuilder.interpreter.SeInterpreter'
  classpath = sourceSets.main.runtimeClasspath
  args "src/main/resources/full_example.json"
  args "--driver=Firefox"
  args "--driver.binary=/usr/bin/firefox"
}

task(customRun, dependsOn: 'classes', type: JavaExec) {
  main = 'com.sebuilder.interpreter.SeInterpreter'
  classpath = sourceSets.main.runtimeClasspath
  args "src/main/resources/full_example.json"
  args "--driver=Firefox"
  args "--driver.binary=/usr/bin/firefox"
}


task wrapper(type: Wrapper) {
  gradleVersion = '2.2.1'
}
